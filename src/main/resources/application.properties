spring.application.name=user-service

#  # ?????
#spring.devtools.restart.enabled=true
#  # ??????
#spring.devtools.restart.additional-paths=src/main/java

spring.mvc.static-path-pattern=/images/**

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://user-service:3305/User
spring.datasource.username=root
spring.datasource.password=werwerTrip1234

mybatis.mapper-locations= classpath:mapper/*.xml
mybatis.type-aliases-package= com.buaa.werwerhotel.entity

spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER
server.tomcat.uri-encoding=UTF-8
server.tomcat.use-relative-redirects=true

# Email configuration
spring.mail.host=smtp.163.com
spring.mail.port=465
spring.mail.username=werwertrip@163.com
spring.mail.password=WNIZLEXXWISAWHSP
spring.mail.protocol=smtps
spring.mail.default-encoding=utf-8
#spring.mail.password=werwerTrip1234
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

server.port=9095
server.servlet.context-path=/api/users

# eureka
#spring.cloud.discovery.client.service-url.defaultZone: http://localhost:8761/eureka
#spring.client.service-url.defaultZone: http://localhost:8761/
eureka.client.serviceUrl.defaultZone=http://eurekaserver-service:8761/eureka
#eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
#eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
# eureka.instance.ip-address=127.0.0.1
# CircuitBreaker ??
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.slidingWindowSize=100
resilience4j.circuitbreaker.configs.default.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=10
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=60000
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=10
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
# ? foodClient ???? CircuitBreaker
resilience4j.circuitbreaker.instances.foodClient.baseConfig=default
resilience4j.circuitbreaker.instances.foodClient.failureRateThreshold=50
resilience4j.circuitbreaker.instances.foodClient.slidingWindowSize=20
# Retry ??
resilience4j.retry.instances.foodClient.maxAttempts=3
resilience4j.retry.instances.foodClient.waitDuration=500
resilience4j.retry.instances.foodClient.enableExponentialBackoff=true
resilience4j.retry.instances.foodClient.exponentialBackoffMultiplier=2
# RateLimiter ??
resilience4j.ratelimiter.instances.foodClient.limitForPeriod=10
resilience4j.ratelimiter.instances.foodClient.limitRefreshPeriod=1s
# ? hotelClient ???? CircuitBreaker
resilience4j.circuitbreaker.instances.hotelClient.baseConfig=default
resilience4j.circuitbreaker.instances.hotelClient.failureRateThreshold=50
resilience4j.circuitbreaker.instances.hotelClient.slidingWindowSize=20
# Retry ??
resilience4j.retry.instances.hotelClient.maxAttempts=3
resilience4j.retry.instances.hotelClient.waitDuration=500
resilience4j.retry.instances.hotelClient.enableExponentialBackoff=true
resilience4j.retry.instances.hotelClient.exponentialBackoffMultiplier=2
# RateLimiter ??
resilience4j.ratelimiter.instances.hotelClient.limitForPeriod=10
resilience4j.ratelimiter.instances.hotelClient.limitRefreshPeriod=1s
# ? messageClient ???? CircuitBreaker
resilience4j.circuitbreaker.instances.messageClient.baseConfig=default
resilience4j.circuitbreaker.instances.messageClient.failureRateThreshold=50
resilience4j.circuitbreaker.instances.messageClient.slidingWindowSize=20
# Retry ??
resilience4j.retry.instances.messageClient.maxAttempts=3
resilience4j.retry.instances.messageClient.waitDuration=500
resilience4j.retry.instances.messageClient.enableExponentialBackoff=true
resilience4j.retry.instances.messageClient.exponentialBackoffMultiplier=2
# RateLimiter ??
resilience4j.ratelimiter.instances.messageClient.limitForPeriod=10
resilience4j.ratelimiter.instances.messageClient.limitRefreshPeriod=1s
# ? orderClient ???? CircuitBreaker
resilience4j.circuitbreaker.instances.orderClient.baseConfig=default
resilience4j.circuitbreaker.instances.orderClient.failureRateThreshold=50
resilience4j.circuitbreaker.instances.orderClient.slidingWindowSize=20
# Retry ??
resilience4j.retry.instances.orderClient.maxAttempts=3
resilience4j.retry.instances.orderClient.waitDuration=500
resilience4j.retry.instances.orderClient.enableExponentialBackoff=true
resilience4j.retry.instances.orderClient.exponentialBackoffMultiplier=2
# RateLimiter ??
resilience4j.ratelimiter.instances.orderClient.limitForPeriod=10
resilience4j.ratelimiter.instances.orderClient.limitRefreshPeriod=1s
# ? trainClient ???? CircuitBreaker
resilience4j.circuitbreaker.instances.trainClient.baseConfig=default
resilience4j.circuitbreaker.instances.trainClient.failureRateThreshold=50
resilience4j.circuitbreaker.instances.trainClient.slidingWindowSize=20
# Retry ??
resilience4j.retry.instances.trainClient.maxAttempts=3
resilience4j.retry.instances.trainClient.waitDuration=500
resilience4j.retry.instances.trainClient.enableExponentialBackoff=true
resilience4j.retry.instances.trainClient.exponentialBackoffMultiplier=2
# RateLimiter ??
resilience4j.ratelimiter.instances.trainClient.limitForPeriod=10
resilience4j.ratelimiter.instances.trainClient.limitRefreshPeriod=1s
# ? userClient ???? CircuitBreaker
resilience4j.circuitbreaker.instances.userClient.baseConfig=default
resilience4j.circuitbreaker.instances.userClient.failureRateThreshold=50
resilience4j.circuitbreaker.instances.userClient.slidingWindowSize=20
# Retry ??
resilience4j.retry.instances.userClient.maxAttempts=3
resilience4j.retry.instances.userClient.waitDuration=500
resilience4j.retry.instances.userClient.enableExponentialBackoff=true
resilience4j.retry.instances.userClient.exponentialBackoffMultiplier=2
# RateLimiter ??
resilience4j.ratelimiter.instances.userClient.limitForPeriod=10
resilience4j.ratelimiter.instances.userClient.limitRefreshPeriod=1s